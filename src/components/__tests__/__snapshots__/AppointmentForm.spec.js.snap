// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppointmentForm component renders input fields for appointment data 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ScrollViewMock
    style={
        Object {
            "backgroundColor": "white",
          }
    }
>
    <View
        style={
            Object {
                "marginVertical": 10,
              }
        }
    >
        <Fields
            component={[Function]}
            names={
                Array [
                    "starttime",
                    "endtime",
                  ]
            }
            placeholder="Time"
        />
    </View>
    <View
        style={
            Object {
                "marginVertical": 10,
              }
        }
    >
        <Fields
            component={[Function]}
            names={
                Array [
                    "dates",
                    "recurrence",
                  ]
            }
        />
    </View>
    <View
        style={
            Object {
                "marginVertical": 10,
              }
        }
    >
        <Field
            component={[Function]}
            name="location"
            placeholder="Location"
        />
    </View>
</ScrollViewMock>,
  "nodes": Array [
    <ScrollViewMock
      style={
            Object {
                  "backgroundColor": "white",
                }
      }
>
      <View
            style={
                  Object {
                        "marginVertical": 10,
                      }
            }
      >
            <Fields
                  component={[Function]}
                  names={
                        Array [
                              "starttime",
                              "endtime",
                            ]
                  }
                  placeholder="Time"
            />
      </View>
      <View
            style={
                  Object {
                        "marginVertical": 10,
                      }
            }
      >
            <Fields
                  component={[Function]}
                  names={
                        Array [
                              "dates",
                              "recurrence",
                            ]
                  }
            />
      </View>
      <View
            style={
                  Object {
                        "marginVertical": 10,
                      }
            }
      >
            <Field
                  component={[Function]}
                  name="location"
                  placeholder="Location"
            />
      </View>
</ScrollViewMock>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <AppointmentForm
        field="someFieldArray[0]"
        index={0}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "field": "someFieldArray[0]",
          "index": 0,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ScrollViewMock
          style={
                    Object {
                              "backgroundColor": "white",
                            }
          }
>
          <View
                    style={
                              Object {
                                        "marginVertical": 10,
                                      }
                    }
          >
                    <Fields
                              component={[Function]}
                              names={
                                        Array [
                                                  "starttime",
                                                  "endtime",
                                                ]
                              }
                              placeholder="Time"
                    />
          </View>
          <View
                    style={
                              Object {
                                        "marginVertical": 10,
                                      }
                    }
          >
                    <Fields
                              component={[Function]}
                              names={
                                        Array [
                                                  "dates",
                                                  "recurrence",
                                                ]
                              }
                    />
          </View>
          <View
                    style={
                              Object {
                                        "marginVertical": 10,
                                      }
                    }
          >
                    <Field
                              component={[Function]}
                              name="location"
                              placeholder="Location"
                    />
          </View>
</ScrollViewMock>,
        "_debugID": 2,
        "_renderedOutput": <ScrollViewMock
          style={
                    Object {
                              "backgroundColor": "white",
                            }
          }
>
          <View
                    style={
                              Object {
                                        "marginVertical": 10,
                                      }
                    }
          >
                    <Fields
                              component={[Function]}
                              names={
                                        Array [
                                                  "starttime",
                                                  "endtime",
                                                ]
                              }
                              placeholder="Time"
                    />
          </View>
          <View
                    style={
                              Object {
                                        "marginVertical": 10,
                                      }
                    }
          >
                    <Fields
                              component={[Function]}
                              names={
                                        Array [
                                                  "dates",
                                                  "recurrence",
                                                ]
                              }
                    />
          </View>
          <View
                    style={
                              Object {
                                        "marginVertical": 10,
                                      }
                    }
          >
                    <Field
                              component={[Function]}
                              name="location"
                              placeholder="Location"
                    />
          </View>
</ScrollViewMock>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <AppointmentForm
    field="someFieldArray[0]"
    index={0}
/>,
}
`;
